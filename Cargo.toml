[package]
name = "twitch_oauth2"
version = "0.16.0"
edition = "2021"
repository = "https://github.com/twitch-rs/twitch_oauth2"
license = "MIT OR Apache-2.0"
description = "Oauth2 for Twitch endpoints"
keywords = ["oauth", "twitch", "async", "asynchronous"]
documentation = "https://docs.rs/twitch_oauth2/0.16.0"
readme = "README.md"
include = [
    "src/*",
    "./Cargo.toml",
    "examples/*",
    "./README.md",
    "CHANGELOG.md",
    "LICENSE*",
]
rust-version = "1.71.1"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = []
client = ["dep:async-trait"]
reqwest = ["dep:reqwest", "client"]
mock_api = []
all = ["reqwest"]

[dependencies]
thiserror = "1.0.40"
displaydoc = "0.2.5"
serde = { version = "1.0.163" }
serde_derive = { version = "1.0.163" }
serde_json = "1.0.96"
async-trait = { version = "0.1.68", optional = true }
http = "1.1.0"
reqwest = { version = "0.12.2", optional = true, default-features = false }
once_cell = "1.19.0"
aliri_braid = "0.4.0"
url = "2.5.4"
base64 = "0.22.0"
rand = "0.8.5"
twitch_types = { version = "0.4.3", features = ["serde"] }

[target.'cfg(all(target_family = "wasm", target_os = "unknown"))'.dependencies]
web-time = { version = "1.1.0" }

[dev-dependencies]
tokio = { version = "1.40.0", features = [
    "rt-multi-thread",
    "macros",
    "test-util",
] }
dotenv = "0.15.0"
anyhow = "1.0.71"
reqwest = "0.12.2"
rpassword = "7.3.1"

[workspace]
members = ["xtask"]

[[example]]
name = "user_token"
path = "examples/user_token.rs"
required-features = ["reqwest"]

[[example]]
name = "app_access_token"
path = "examples/app_access_token.rs"
required-features = ["reqwest"]

[[example]]
name = "auth_flow"
path = "examples/auth_flow.rs"
required-features = ["reqwest"]


[[example]]
name = "mock_app"
path = "examples/mock_app.rs"
required-features = ["reqwest", "mock_api"]

[[example]]
name = "mock_user"
path = "examples/mock_user.rs"
required-features = ["reqwest", "mock_api"]

[[example]]
name = "device_code_flow"
path = "examples/device_code_flow.rs"
required-features = ["reqwest", "client"]

[package.metadata.docs.rs]
features = ["all", "mock_api"]
rustc-args = ["--cfg", "nightly"]
rustdoc-args = ["--cfg", "nightly"]
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(_internal_never)', 'cfg(nightly)'] }
